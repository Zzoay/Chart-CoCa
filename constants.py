
DESCRIPTION_PROMPT = """# Instructions
Given a chart, generate a detailed description that can help another LLM fully understand, interpret, and recreate the chart.

Steps:
1. Describe the general information of the chart, such as subplot layout (for multiple subplots) and the type of each subplot (line graph, heatmap, bar chart, scatter plot, box plot, violin plot, 3D-plot, etc.). For example, if there is a single chart like a heatmap, the layout should be 1 by 1. If there are six subplots in two rows and three columns, the subplot layout should be 2 by 3.
2. Extract all textual and numerical information present in the chart, such as titles, labels, legends, specific numbers, tick values in each axis, and any other annotations.
3. Based on the type of each subplot, provide a detailed description and analysis of chart components, including but not limited to the following elements: data categories, legends, colors, styles and patterns, scales, comparisons, trends, changes, and proportions. In addition, highlight any notable features within and across subplots.

# Chart
<IMAGE_TOKEN> 

# Guidelines
- (Only for multiple subplots) If there is global information or shared information between subplots, such as a shared title, legend, y label, x label, etc., state and describe it directly and avoid repeating the description for each subplot. Otherwise, directly describe each subplot.
- For a single plot (1 by 1), directly describe the chart.
- For multiple subplots, using the rows and columns (starting from 1, from top to bottom, left to right) as a focus, describe each subplot separately.
- Notice differences between subplots, such as the titles and labels, the range of values, the number of data points, the distribution of data, and any notable features.
- When describing important features like trends and comparisons, differentiate lines, bars, clusters of scatters, and other elements.
- If some elements are not presented in the chart, do not describe them, or state them as "Not Available".
- For observable or inferrable numerical features, use specific numbers but avoid generating too many numbers.
- Cover all subplots in the chart. The number of descriptions of subplots should match the number of subplots.
"""

# # Output Template
# Refering to the below template to generate the detailed chart description, where <> indicates a placeholder for the relevant information, and ... indicates some omitted information. You should fill in them based on the chart.
# ```
# # General Information
# Number of Subplots: <num_subplots>
# Subplot Layout: <subplot_layout> (1 by 1, 2 by 3, etc.)
# Shared Information:
# - Shared Title: <title of the whole chart>
# - Shared X-axis Label: <shared_x_axis_label>
# - Shared Y-axis Label: <shared_y_axis_label>
# - Shared Legend: <shared_legend>

# # Subplot at row 1 and column 1 (1/<num_subplots>)
# Type: <subplot_1_type>  (line graph, heatmap, bar chart, scatter plot, etc.)
# Textual and Numerical Information: <title of the subplot>, <labels>, <tick labels>, <other annotations>, 
# Descriptive Analysis:
# <values>
# <data categories>
# <colors>
# <legends>
# <bars>
# <lines>
# <scatter points>
# <colorbars>
# <styles and patterns>
# <comparisons>
# <trends>
# <changes>
# ...

# # Subplot at row 1 and column 2 (2/<num_subplots>)
# Type: <subplot_2_type>
# ...

# # Subplot at row 1 and column 3 (3/<num_subplots>)
# ...
# # Subplot at row 2 and column 1 (4/<num_subplots>)
# ...
# ...
# # Subplot at row xx and column xx (<num_subplots>/<num_subplots>)
# ...
# ```

CODE_PROMPT = """# Instructions
Given a detailed chart description generated by an LLM, write a complete Python script that restores the chart.

Steps:
1. Generate Data: Based on the chart description, seperately generate pseudo-data for each subplot.
2. Construct Code Snippets: For each subplot, write Python snippets that match the description and use the generated data to create the chart.
3. Output Final Code: Present the fully Python code.

# Description
{}

# Guidelines
Follow the guidelines below.

## Data Generation
- Match the chart type.
- When generating dense data, use funtions with some randomness and noise to avoid too long data lists.
- If feasible, make a random perturbation of data for different categories and different subplots to make it more realistic.
- Generate data for each subplot separately. Different subplots and categories should have different data. For example, for line graphs, the y-data for drawing should be different among all lines.

## Subplots
- For mutiple subplots (except for 1 by 1), if there are elements shared or fully consistent between all subplots, such as headings, y labels, x labels, legends, etc., set them by using `fig.` and avoid setting them in the subplots. For example, "fig.suptitle('Irene')", "fig.supxlabel('World peace')", "fig.supylabel('A wonderful world')".
- Each subplot and its components (e.g., lines, bars, scatters, etc.) should be set in code separately.
- Show differences between subplots, such as the titles and labels, therange of values, the number of data points, the distribution of data, and any notable features.
- Use `plt.subplots()` to create the subplots and specify the number of rows and columns. For example, for 2x3 subplots, set `fig, axes = plt.subplots(2, 3)`. For a single subplot, set `fig, ax = plt.subplots(1, 1)`.
- From top to bottom, left to right, use axes[row, column] to specify the subplot layout. Subplot indexing starts from 1. For example, "Subplot at row 1, column 2" is `axes[0, 1]` in code. For a single row or column, axes[i] indicates the (i+1)-th row or column. For a single subplot, ax indicates the current plot.
- Cover all subplots. If some subplots in the given description is not available in the description, refer to the previous subplots and make some modifications to generate the corresponding data and code.

## Visibility
- Avoid overlapping, exceeding boundaries, etc., by using larger spacing, margins, and figure size, or using smaller font size.
- Generally, the more subplots and information, the larger the image size and subplot spacing.
- For dense numerical or textual tick labels in axies, rotate to avoid overlap. For example, text in x-axis ticks can be rotated by 60 or 90 degrees.

## Setups
- The code should match the chart type in the description.
- Different categories should have different data, colors and patterns to make them more distinguishable.
- Don't set the elements or set them to "" that are not presented or stated as "Not Applicable" or "none" etc.
- When setting colors, use hexadecimal color codes from `#000000` to `#FFFFFF`, such as `#3E68B6`. Here are some color codes for reference: "#FF5733", "#33FF57", "#3357FF", "#FF33A1", "#FFFD33", "#33FFF6", "#B833FF", "#FF7F33", "#33FFA5", "#FF3333", "#75FF33", "#337BFF", "#FF33EC", "#A1FF33", "#3381FF", "#FF3364", "#33FFDA", "#8C33FF", "#FFB833", "#33FF8C".
- Use markdown syntax `r'$...$'` to set mathematical notation and expressions.
- Avoid set generic titles like "subplot xx," "title," "x-axis label," "y axis," "label xx," "category xx," and "class xx" as they are not informative.
- '...' is strictly forbidden in the code.
"""

DEBUG_PROMPT = """# Instructions
Debug the given Python code that tries to draw a chart to make it work correctly. 
Analyze the bug and suggest a solution. Then, output the full bug-free code.

# Code
```python
{}
```

# Error
{}

# Guidelines
- Use markdown code block syntax to wrap the code and specify Python. For example, ```python ... ```.
"""

CHART_CODE_CHECK_PROMPT = """# Instructions
Review the generated chart and accompanying Python code. If there are discrepancies, identify them and amend the code to make all elements clearly visible.

Steps: 
1. Identify Issues:
    1.1. Analyze problems in the chart, such as missing subplots, overlapping elements, empty plots, out-of-bounds elements, and any odd features in the charts.
    1.2. Examine the Python code to detect any errors or omissions concerning subplots. Also, consider the adjustments needed in the code to make the plot more visible.
2. Revise Code: If there are any issues, revise the code to make the plot more visible. Otherwise, keep the code as is.
3. Output Full Revised Code: Present the complete version of the final code.

# Chart
<IMAGE_TOKEN>

# Code
{}

# Guidelines
Follow the guidelines below.

## Principles
- If elements are correct and visible in the given chart, don't make changes for them in the code.
- If there are missing elements such as points, lines, and bars, etc., add them. For example, for a 2 by 3 plot, there should be `axes[0, 0], axes[0, 1], ...,  axes[1, 2]` in the code.
- The criterion for truncation or overlap is whether all textual and numerical elements can be identified entirely or not. Thus, attempt to extract all textual and numerical elements first to find problems of truncation or overlap. If there are any issues, adjust the relevant code lines to make the elements more visible. Otherwise, keep them as are.
- Subplot indexing starts from 0 in code, indicating the subplot at the (i+1)-th row and (j+1)-th column, from top to bottom, left to right.
- Ensure the diversity of categories and data points. Make small fluctuations in those data for different categories.

## Potential Adjustments
- Delete code lines that set generic elements such as "subplot xx," "title xx," "x label," "y axis," "label xx," "cluster xx," "category xx," and "class xx," as they are not informative.
- For dense numerical or textual tick labels on the x-axis or y-axis, if there are overlaps, consider rotating them to avoid overlap. For example, text tick labels on the x-axis can be rotated by 60 or 90 degrees, such as `axes[1, 2].set_xticklabels(ax.get_xticklabels(), rotation=60)`
- If any element is out of bounds (part of the information is truncated), increase the figure size (e.g., `plt.figure(figsize=(larger_width, larger_height))`) or adjust the margins (e.g., `plt.subplots_adjust(bottom=xx, top=xx)`).
- If there is overlap between subplots and elements, increase the spacings or margins between them, or decrease the font size of the text. 
- If there is an overlap between similar elements such as lines, perfrome some data perturbation in the relevant code to avoid the overlap.

## Setups
- Use markdown code block syntax to wrap the full code and specify Python. For example, ```python ...```.
"""

CHART_CODE_COHERENCE_CHECK_PROMPT = """# Instructions
Given a code that generates a chart and some questions about the chart, you should analyze the relevant information and then answer the questions.

Steps:
1. Extraction and Analysis: For each question
    1.1. First extract the information related to the question.
    1.2. Then analyze the relevant information for answering each question.
2. Answer: Answer the question with a short sentence.

# Questions
{}

# Partial Chart Information
Here may be some information for your reference. If there is no relevant information, look for information in the code.
{}

# Code
```python
{}
```

# Guidelines
- If there are multiple subplots, focus on the subplot specified by the question.
- Prioritize analyzing and answering based on the "Partial Chart Information..." section. If there is no relevant information, look at the code. 
- If there is a conflict between the given information and the code, the given information prevails. For example, if the given information indicates that the title is `Not Applicable` or `` or `None`, but the code has a title, then the answer should be `Not Applicable`.
- If there is no relevant information in both the given information and the code, or the question is not related to the chart, or the number of relevant elements is 0, answer "Not Applicable". For example, a heatmap may not have lines, and some plots may not have legends or colorbars.
- All analyzing information should be detailed, completely and accurately reflecting the subplot's position and details as outlined in the question.
- From top to bottom, left to right, axes[row, column] specifies the subplot layout. Axes[i-1, j-1] indicates the subplot at the (i)-th row and (j)-th column of subplots. For example, "subplot at row 1 and column 2" in questions is "axes[0, 1]" in code. For a single row or column, axes[i] indicates the (i+1)-th row or column of subplots. For a single subplot, "ax" indicates the current plot or there is no specification of subplot.
- The number and layout of subplots should be specified with "plt.subplots(n_rows, n_cols)" in the code. For example, for 2x3 subplots (6 in total), see "fig, axes = plt.subplots(2, 3)". For a single subplot, see "fig, ax = plt.subplots(1, 1)" or there is no code relevant to the layout.
- When asked a question about "tick labels on the continuous legend (i.e., colorbar)," look at the code. If there is no "colorbar" in the code, answer "Not Applicable".
- When asked a question about "labeled tick," focus on values on the axis or data for x and y axis, not the axis's label like "x-label" or "y-label".
- When asked a question about "line intersect," if the subplot is not a line plot (eg., a scatter plot, bar chart, etc.), answer "Not Applicable". Othewise, analyze whether different line segments have the same y value or investigate the presence of "(y1[i] - y2[i]) * (y1[i+1] - y2[i+1]) < 0", if yes, then there is an intersection. Note that the overlap of lines is also considered to be an intersection. 
- When asked a question about "difference between numerical tick values," if the axis ticks are not numerical (i.e, text label ticks), answer "Not Applicable". Otherwise, first try to answer it based on the given chart informaiton. If not present in the information but present in the code, calcualating the difference between any two neighboring values of the corresponding coordinate axes, eg. x[1] - x[0] or y[1] - y[0].
- Follow the guideline after each question individually. 
- The answer should be a brief and short sentence, mentioniong the backbone of the corresponding question. For example, when question is like "What is the labels in the legend for the subplot at row 1 and column 2?", answer should be like: "The labels in the legend for the subplot at row 1 and column 2 is 'xxx'."
- Format the output as:
    ```
    Question 1: ...
    Extraction and Analysis 1: ...
    Answer 1: ...
    Question 2: ...
    Extraction and Analysis 2: ...
    Answer 2: ...
    ...
    ```
"""

EXTRACT_PROMPT = """# Instructions
Given the questions, analysis, and answers, extract them into two lists of questions and answers in order.

# Input
{}

# Guidelines
- Each answer should be brief and short.
- Output the QA pairs following the original format and order, like:
    ```
    Questions:
    1...
    2...
    3...
    4...
    Answers:
    1...
    2...
    3...
    4...
    ```
    Then stop outputting.
"""

DESCRIPTIVE_RESP_INST = {
    1: \
    """{}what is its title?
    * Your final answer should be the most relevant title of the plot that is explicitly written.
    * If the plot does not have an explicit title or contains only a letter, answer 'Not Applicable'.
    """,

    2: \
    """{}what is the label of the x-axis?
    * Your final answer should be the label of the x-axis that is explicitly written, including the case when x-axis is shared across multiple subplots. When the x-axis is present on both the top and bottom of the plot, answer the label of the x-axis at the bottom.
    * If the plot does not have an explicit x-axis label, answer 'Not Applicable'.
    """,

    3: \
    """{}what is the label of the y-axis?
    * Your final answer should be the label of the y-axis that is explicitly written, including the case when y-axis is shared across multiple subplots. When the y-axis is present on both the left and right of the plot, answer the label of the y-axis at the left.
    * If the plot does not have an explicit y-axis label, answer 'Not Applicable'.""",

    4: \
    """{}what is the leftmost labeled tick on the x-axis?
    * Your final answer should be the tick value on the x-axis that is explicitly written, including the case when x-axis is shared across multiple subplots. When the x-axis is present on both the top and bottom of the plot, answer based on the axis at the bottom. Ignore units or scales that are written separately from the tick, such as units and scales from the axis label or the corner of the plot.""",

    5: \
    """{}what is the rightmost labeled tick on the x-axis?
    * Your final answer should be the tick value on the x-axis that is explicitly written, including the case when x-axis is shared across multiple subplots. When the x-axis is present on both the top and bottom of the plot, answer based on the axis at the bottom. Ignore units or scales that are written separately from the tick, such as units and scales from the axis label or the corner of the plot.""",

    6: \
    """{}what is the spatially lowest labeled tick on the y-axis?
    * Your final answer should be the tick value on the y-axis that is explicitly written, including the case when y-axis is shared across multiple subplots. When the y-axis is present on both the left and right of the plot, based on the axis at the left. Ignore units or scales that are written separately from the tick, such as units and scales from the axis label or the corner of the plot.""",

    7: \
    """{}what is the spatially highest labeled tick on the y-axis?
    * Your final answer should be the tick value on the y-axis that is explicitly written, including the case when y-axis is shared across multiple subplots. When the y-axis is present on both the left and right of the plot, based on the axis at the left. Ignore units or scales that are written separately from the tick, such as units and scales from the axis label or the corner of the plot.""",

    8: \
    """{}what is difference between consecutive numerical tick values on the x-axis?
    * Your final answer should be the difference between consecutive numerical tick values of the x-axis, including the case when x-axis is shared across multiple subplots. When the x-axis is present on both the top and bottom of the plot, answer based on the axis at the bottom. Ignore units or scales that are written separately from the tick, such as units and scales from the axis label or the corner of the plot.
    * If the plot does not have an explicit x-axis tick value, or if the tick values are not numerical, or if the difference is not constant between all consecutive tick values, answer "Not Applicable".""",

    9: \
    """{}what is difference between consecutive numerical tick values on the y-axis?
    * Your final answer should be the difference between consecutive numerical tick values of the y-axis, including the case when y-axis is shared across multiple subplots. When the y-axis is present on both the left and right of the plot, answer based on the axis at the left. Ignore units or scales that are written separately from the tick, such as units and scales from the axis label or the corner of the plot.
    * If the plot does not have an explicit y-axis tick value, or if the tick values are not numerical, or if the difference is not constant between all consecutive tick values, answer "Not Applicable".""",

    10: \
    """{}how many lines are there?
    * Your final answer should be the number of lines in the plot. Ignore grid lines, tick marks, and any vertical or horizontal auxiliary lines.
    * If the plot does not contain any lines or is not considered a line plot, answer "Not Applicable".""",

    11: \
    """{}do any lines intersect?
    * Your final answer should be "Yes" if any lines intersect, and "No" otherwise. Ignore grid lines, tick marks, and any vertical or horizontal auxiliary lines.
    * If the plot does not contain any lines or is not considered a line plot, answer "Not Applicable".""",

    12: \
    """{}how many discrete labels are there in the legend?
    * Your final answer should account for only labels relevant to the plot in the legend, even if the legend is located outside the plot. 
    * If the plot does not have a legend or no legend is not considered relevant to this plot, answer "Not Applicable".""",

    13: \
    """{}what are the names of the labels in the legend?
    * You should write down the labels from top to bottom, then from left to right and separate the labels with commas. Your final answer should account for only labels relevant to the plot in the legend, even if the legend is located outside the plot.
    * If the plot does not have a legend or no legend is not considered relevant to this plot, answer "Not Applicable".""",

    14: \
    """{}what is the difference between the maximum and minimum values of the tick labels on the continuous legend (i.e., colorbar)?
    * You should remove the percentage sign (if any) in your answer.
    * If the plot does not have an explicit colorbar-based continuous legend or the legend is not considered relevant to this subplot, answer "Not Applicable".""",

    15: \
    """{}what is the maximum value of the tick labels on the continuous legend (i.e., colorbar)?
    * You should remove the percentage sign (if any) in your answer. 
    * If the plot does not have an explicit colorbar-based continuous legend or the legend is not considered relevant to this subplot, answer "Not Applicable".""",

    16: \
    """{}what is the general trend of data from left to right?
    * Your final answer should be within a few words, such as "increases", "increases then stabilizes".""",

    17: \
    """{}What is the total number of explicitly labeled ticks across all axes?
    * Your final answer should be the total number of explicitly labeled ticks across all axes, including the case when any axis is shared across multiple subplots.""",

    18: \
    """What is the layout of the subplots?
    * Your final answer should follow "n by m" format, where n is the number of rows and m is the number of columns.
    * If the plot does not contain subplots, answer "1 by 1".""",

    19: \
    """What is the number of subplots?
    * Your final answer should be the total number of subplots in the plot.
    * If the plot does not contain subplots, answer "1".""",
}


REASONING_RESP_INST = {
    1: \
    """{}
    * Your final answer must be grounded to some text that is explicitly written and relevant to the question in the chart.
    * If you need to answer multiple terms, separate them with commas.
    * Unless specified in the question (such as answering with a letter), you are required to answer the full names of subplots and/or labels by default.
    """,

    2: \
    """{}
    * If there are options in the question, your final answer must conform to one of the options.
    * If there are additional instructions in the question, follow them accordingly.
    * If there are neither options nor additional instructions, you are allowed to respond with a short phrase only.
    """,

    3: \
    """{}
    * Your final answer must be grounded to a number that is exlicitly written and relevant to the question in the chart, even if it's an approximate value.
    * You are allowed to extract numbers within some text when needed.
    """,

    4: \
    """{}
    {}
    """
}